namespace AZ.Generator.EntityFrameworkCore.Constants;

internal static class Attributes
{
	public const string EntitySets = "EntitySetsAttribute";

	public const string EntitySet = "EntitySetAttribute";

	internal const string EntitySet_Name = "Name";

	internal const string EntitySet_Ignore = "Ignore";

	public const string EntityConfigurations = "EntityConfigurationsAttribute";

	public const string EntityConfiguration = "EntityConfiguration";

	internal const string EntityConfiguration_Ignore = "Ignore";

	internal const string EntitySetsDefinition =
		$$"""
		// <auto-generated />
		
		namespace {{Namespaces.Attributes}};
		
		[Microsoft.CodeAnalysis.EmbeddedAttribute]
		[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
		internal sealed class {{EntitySets}} : System.Attribute
		{
			public System.Type[] ContainingTypes { get; }

			public {{EntitySets}}(params System.Type[] containingTypes)
			{
				ContainingTypes = containingTypes;
			}
		}

		""";

	internal const string EntitySetConfigDefinition =
		$$"""
		// <auto-generated />
		#nullable enable

		namespace {{Namespaces.Attributes}};
		
		[Microsoft.CodeAnalysis.EmbeddedAttribute]
		[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
		internal sealed class {{EntitySet}} : System.Attribute
		{
			public string {{EntitySet_Name}} { get; set; } = string.Empty;

			public bool {{EntitySet_Ignore}} { get; set; } = false;
		}

		""";

	internal const string EntityConfigurationsDefinition =
		$$"""
		// <auto-generated />
		
		namespace {{Namespaces.Attributes}};
		
		[Microsoft.CodeAnalysis.EmbeddedAttribute]
		[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
		internal sealed class {{EntityConfigurations}} : System.Attribute
		{
			public System.Type[] ContainingTypes { get; }
		
			public {{EntityConfigurations}}(params System.Type[] containingTypes)
			{
				ContainingTypes = containingTypes;
			}
		}

		""";

	internal const string EntityConfigurationDefinition =
		$$"""
		// <auto-generated />
		#nullable enable
		
		namespace {{Namespaces.Attributes}};
		
		[Microsoft.CodeAnalysis.EmbeddedAttribute]
		[System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
		internal sealed class {{EntityConfiguration}} : System.Attribute
		{
			public bool {{EntityConfiguration_Ignore}} { get; set; } = false;
		}

		""";
}
